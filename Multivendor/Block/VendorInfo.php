<?php

namespace Magestore\Multivendor\Block;
class VendorInfo extends \Magento\Framework\View\Element\Template
{
    protected $_objectManager;
    protected $_storeManager;
    protected $_configHelper;

    public function __construct(
        \Magento\Framework\View\Element\Template\Context $context,
        \Magento\Framework\ObjectManagerInterface $objectManager,
        \Magestore\Multivendor\Helper\Config $configHelper,
        array $data
    )
    {
        $this->_configHelper = $configHelper;
        $this->_objectManager = $objectManager;
        $this->_storeManager = $context->getStoreManager();
        parent::__construct($context, $data);
    }

    public function getVendorModel()
    {
        $id = $this->getRequest()->getParam('id');
        $vendorProductModel = $this->_objectManager->create('Magestore\Multivendor\Model\ResourceModel\VendorProduct\Collection')
            ->addFieldToFilter('product_ids', array('finset' => array($id)))
            ->getFirstItem();
        if ($vendorProductModel->getId()) {
            $vendorId = $vendorProductModel->getData('vendor_id');
            if ($vendorId) {
                $vendorModel = $this->_objectManager->create('Magestore\Multivendor\Model\Vendor')
                    ->load($vendorId);
                if ($vendorModel->getId()) {
                    return $vendorModel;
                }
            }
        }
        return null;
    }

    public function getMediaUrlImage($imagePath = '')
    {
        return $this->_storeManager->getStore()
                ->getBaseUrl(\Magento\Framework\UrlInterface::URL_TYPE_MEDIA) . $imagePath;
    }

    public function  toHtml()
    {
        if($this->_configHelper->getStoreConfig('multivendor/general/active') == 0){
            return '';
        }
        else{
            return parent::toHtml(); // TODO: Change the autogenerated stub
        }
    }

}
